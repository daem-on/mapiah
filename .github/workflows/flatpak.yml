name: Mapiah Flatpak Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      test_tag:
        description: 'Simulated tag for testing'
        required: false
        default: 'v1.0.0-test'

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:freedesktop-24.08
      options: --privileged
    steps:
    - uses: actions/checkout@v4
    - uses: flatpak/flatpak-github-actions/flatpak-builder@v6
      with:
        bundle: palette.flatpak
        manifest-path: org.mapiah.mapiah.yml
        cache-key: flatpak-builder-${{ github.sha }}


    # runs-on: ubuntu-22.04
    # steps:
    # - name: Checkout code
    #   uses: actions/checkout@v4

    # - name: Validate tag (automatic runs only)
    #   if: github.event_name == 'push'
    #   shell: bash
    #   run: |
    #     set -e
    #     set -x
    #     TAG=${GITHUB_REF#refs/tags/}
    #     if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    #       echo "::error::Invalid tag format: $TAG (must match vX.Y.Z)"
    #       exit 1
    #     fi
    #     echo "Validated tag: $TAG"

    # - name: Set up Flutter
    #   uses: subosito/flutter-action@v2
    #   with:
    #     channel: stable
    #     flutter-version: 3.32.4

    # - name: Install dependencies
    #   uses: awalsh128/cache-apt-pkgs-action@latest
    #   with:
    #     packages: appstream appstream-util flatpak flatpak-builder libappstream-glib8 clang cmake ninja-build pkg-config libgtk-3-dev libglu1-mesa
    #     version: 1.0

    # - name: Build flutter app
    #   run: |
    #     set -e
    #     set -x
    #     flutter --version
    #     flutter config --enable-linux-desktop
    #     flutter build linux --release

    # - name: Prepare Flatpak package
    #   run: |
    #     set -e
    #     set -x
    #     projectName=Mapiah
    #     projectId=org.mapiah.mapiah
    #     executableName=mapiah
    #     APP_DIR="app"

    #     mkdir -p "$APP_DIR/$projectName"
    #     cp -r build/linux/x64/release/bundle/* "$APP_DIR/$projectName/"
    #     chmod +x "$APP_DIR/$projectName/$executableName"
    #     mkdir -p "$APP_DIR/bin"
    #     ln -s "$APP_DIR/$projectName/$executableName" "$APP_DIR/bin/$executableName"

    #     iconDir="$APP_DIR/share/icons/hicolor/scalable/apps"
    #     mkdir -p "$iconDir"
    #     cp -r assets/icons/m-*.png "$iconDir/"

    #     desktopFileDir="$APP_DIR/share/applications"
    #     mkdir -p "$desktopFileDir"
    #     cp -r packaging/linux/$projectId.desktop "$desktopFileDir/"

    #     metadataDir="$APP_DIR/share/metainfo"
    #     mkdir -p "$metadataDir"
    #     cp -r packaging/linux/$projectId.metainfo.xml "$metadataDir/"

    #     cp "packaging/linux/flatpak/built-locally/$projectId.yml" .

    # - name: Install Flatpak Builder dependencies
    #   run: |
    #     set -e
    #     set -x
    #     sudo flatpak remote-add --system --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
    #     sudo flatpak install --system --noninteractive org.freedesktop.Sdk/x86_64/24.08
    #     sudo flatpak install --system --noninteractive flathub org.freedesktop.Platform/x86_64/24.08
    #     sudo flatpak install --system --noninteractive flathub org.freedesktop.Sdk.Extension.llvm19

    # - name: Setup upterm session
    #   uses: lhotari/action-upterm@v1
    #   with:
    #     limit-access-to-actor: true
